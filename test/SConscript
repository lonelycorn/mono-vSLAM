Import("env")
targets = []

#===================#
#     UNIT TEST     #
#===================#
#env1 = env.Clone()
#test_unit_test = env1.Program('test-unit-test', ['test-unit-test.cpp'])
#run_test_unit_test = env1.UnitTest('test-unit-test.passed', 'test-unit-test')
#targets += run_test_unit_test
#Alias('test_unit_test', run_test_unit_test)

test_math = env.mvSLAM_UnitTest('test-math',
                                ['test-math.cpp',
                                 env.Object('../source/base/math.cpp'),
                                ])
targets += test_math

test_camera = env.mvSLAM_UnitTest('test-camera',
                                  ['test-camera.cpp',
                                   env.Object('../source/vision/camera.cpp'), # depends on the object file, so that it is only compiled once
                                   env.Object('../source/base/math.cpp'),
                                  ])
targets += test_camera

test_sfm = env.mvSLAM_UnitTest('test-sfm',
                               ['test-sfm.cpp',
                                env.Object('../source/vision/sfm.cpp'),
                                env.Object('../source/vision/camera.cpp'), 
                                env.Object('../source/vision/fundamental-matrix.cpp'),
                                env.Object('../source/vision/estimator-RANSAC.cpp'),
                                env.Object('../source/base/opencv.cpp'),
                                env.Object('../source/base/math.cpp'),
                               ])
targets += test_sfm


Return(['targets'])

