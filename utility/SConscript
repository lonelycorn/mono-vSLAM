Import("env")
targets = []

#====================#
#     TEST UTILS     #
#====================#

targets += env.mvSLAM_Program(
    target='test-visualizer',
    source=[
        'test-visualizer.cpp',
    ],
    internal_libs=[
        'mvSLAM_visualization',
        'mvSLAM_os',
        'mvSLAM_base',
        'mvSLAM_math',
    ],
    external_libs=[
        'mvSLAM_external_vtk',
        'mvSLAM_external_pcl',
        'mvSLAM_external_system',
        'mvSLAM_external_boost',
    ]
)


targets += env.mvSLAM_Program(
    target='test-image-io',
    source=[
        'test-image-io.cpp',
    ],
    internal_libs=[
        'mvSLAM_base',
    ],
    external_libs=[
        'mvSLAM_external_opencv',
    ]
)

targets += env.mvSLAM_Program(
    target='test-visual-feature',
    source=[
        'test-visual-feature.cpp',
        '../source/vision/visual-feature.cpp',
    ],
    internal_libs=[
        'mvSLAM_base',
    ],
    external_libs=[
        'mvSLAM_external_opencv',
    ]
)

targets += env.mvSLAM_Program(
    target='reconstruct-scene',
    source=[
        'reconstruct-scene.cpp',
    ],
    internal_modules=[
        'mvSLAM_vision',
    ],
    internal_libs=[
        'mvSLAM_visualization',
        'mvSLAM_os',
        'mvSLAM_base',
        'mvSLAM_math',
    ],
    external_libs=[
        'mvSLAM_external_gtsam',
        'mvSLAM_external_opencv',
        'mvSLAM_external_vtk',
        'mvSLAM_external_pcl',
        'mvSLAM_external_boost',
        'mvSLAM_external_system',
    ]
)

targets += env.mvSLAM_Program(
    target='calibrate-camera',
    source=[
        'calibrate-camera.cpp',
        '../source/vision/camera.cpp',
    ],
    internal_libs=[
        'mvSLAM_os',
        'mvSLAM_base',
        'mvSLAM_math',
    ],
    external_libs=[
        'mvSLAM_external_opencv',
    ]
)

targets += env.mvSLAM_Program(
    target='video-capture',
    source=[
        'video-capture.cpp',
        '../source/os/time.cpp',
    ],
    external_libs=[
        'mvSLAM_external_opencv',
    ]
)

targets += env.mvSLAM_Program(
    target='visual-odometer',
    source=[
        'visual-odometer.cpp',
    ],
    internal_modules=[
        'mvSLAM_front_end',
        'mvSLAM_vision',
    ],
    internal_libs=[
        'mvSLAM_visualization',
        'mvSLAM_os',
        'mvSLAM_base',
        'mvSLAM_math',
    ],
    external_libs=[
        'mvSLAM_external_gtsam',
        'mvSLAM_external_opencv',
        'mvSLAM_external_vtk',
        'mvSLAM_external_pcl',
        'mvSLAM_external_boost',
        'mvSLAM_external_system',
    ]
)


Return(['targets'])

